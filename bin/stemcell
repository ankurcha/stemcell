#!/usr/bin/env ruby
#
# Copyright (c) 2009-2012 VMware, Inc.

$:.unshift File.join(__FILE__, "..", "..", "lib")

require 'rubygems'
require 'thor'
require 'stemcell'

module StemCellBuilderCLI

  class Build < Thor
    class_option :name,           :banner => "<name>",
                                  :desc => "Name of the stemcell"
    class_option :prefix,         :banner => "<prefix>",
                                  :desc => "Directory to use as staging area for all the stemcell work"
    class_option :architecture,   :banner => "<architecture>",
                                  :desc => "Architecture of the OS"
    class_option :infrastructure, :banner => "<infrastructure>",
                                  :desc => "Infrastructure hosting the vm"
    class_option :target,         :banner => "<target>",
                                  :desc => "Path for the final stemcell"
    class_option :agent_src_path, :banner => "<agent_src_path>",
                                  :desc => "Bosh Agent Source path, this may be the gem or directory path of Bosh agent source"
    class_option :agent_version,  :banner => "<agent_version>",
                                  :desc => "Bosh Agent version being installed"
    class_option :agent_protocol, :banner => "<agent_protocol_version>",
                                  :desc => "Bosh Agent Protocol Version being installed"
    class_option :iso,            :banner => "<iso file path>",
                                  :desc => "Path to the iso file to use"
    class_option :iso_md5,        :banner => "<MD5 of iso file>",
                                  :desc => "MD5 of the ISO"
    class_option :nogui,          :banner => "No GUI",
                                  :desc => "Run virtualbox headless",
                                  :type => :boolean,
                                  :default => true

    desc "ubuntu", "Build a new ubuntu stemcell"
    def ubuntu
      Bosh::Agent::StemCell::UbuntuBuilder.new(options.dup).run
    end

    desc "redhat", "Build a new redhat stemcell"
    method_option :rhn_user,      :type => :string, 
                                  :banner => "<rhn username>",
                                  :desc => "Redhat Network Username"
    method_option :rhn_pass,      :type => :string, 
                                  :banner => "<rhn password>",
                                  :desc => "Redhat Network Password"
    def redhat
      Bosh::Agent::StemCell::RedhatBuilder.new(options.dup).run
    end

    desc "centos", "Build a new redhat stemcell"
    def centos
      Bosh::Agent::StemCell::CentosBuilder.new(options.dup).run
    end

    desc "noop", "Build a new noop stemcell [this is good for testing only]"
    def noop
      Bosh::Agent::StemCell::NoOpBuilder.new(options.dup).run
    end

  end

  class Info < Thor

  end

  class StemCellBuilder < Thor

    desc "build SUBCOMMAND ...ARGS", "Build a new stemcell"
    subcommand "build", Build

    desc "info <file>", "Display stemcell information, it looks for stemcell file name <file>"
    def info(file)
      raise "File #{file} does not exist." unless File.exists? file

      Kernel.system "tar -tvf #{file}"

      dir = Dir.mktmpdir
      Dir.chdir(dir) do
        if Kernel.system("tar -xzf #{file} stemcell.MF")
          puts File.open("stemcell.MF").read()
        end
      end
    end

  end

end

StemCellBuilderCLI::StemCellBuilder.start(ARGV)
